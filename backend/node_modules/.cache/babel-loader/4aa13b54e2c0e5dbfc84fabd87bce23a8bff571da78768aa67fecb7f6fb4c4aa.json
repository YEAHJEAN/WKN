{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import'./Signup.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signup=()=>{const[formData,setFormData]=useState({username:'',password:'',confirmPassword:'',email:'',emailDomain:''// 이메일 도메인 추가\n});const[errors,setErrors]=useState({});const navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});// 입력 필드에 대한 에러가 있었다면 에러를 제거\nif(errors[name]){setErrors({...errors,[name]:''});}};const handleSubmit=async e=>{e.preventDefault();const validateForm=()=>{const newErrors={};if(!formData.username.trim()){newErrors.username='이름을 입력해주세요';}if(!formData.password.trim()){newErrors.password='비밀번호를 입력해주세요';}else if(!/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,10}$/.test(formData.password)){newErrors.password='영문과 숫자를 포함한 8~10자 비밀번호를 입력해주세요';}if(!formData.confirmPassword.trim()){newErrors.confirmPassword='비밀번호 확인을 입력해주세요';}else if(formData.confirmPassword!==formData.password){newErrors.confirmPassword='비밀번호가 일치하지 않습니다';}if(!formData.email.trim()||!formData.emailDomain.trim()){newErrors.email='이메일을 입력해주세요';}return newErrors;};const errors=validateForm();// 유효성 검사 통과 시, 회원가입 처리\nif(Object.keys(errors).length===0){try{// 서버로 전송할 데이터\nconst requestData={username:formData.username,password:formData.password,email:\"\".concat(formData.email,\"@\").concat(formData.emailDomain)};await axios.post('/api/signup',requestData);alert('회원가입 성공!');navigate('/');}catch(error){console.log('에러:',error.message);alert('서버 오류가 발생했습니다.');}}else{setErrors(errors);}};return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:\"signup-box\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"username\",id:\"username\",name:\"username\",placeholder:\"\\uC774\\uB984\",value:formData.username,onChange:handleChange}),errors.username&&/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:errors.username})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\",value:formData.password,onChange:handleChange}),errors.password&&/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:errors.password})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",name:\"confirmPassword\",placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",value:formData.confirmPassword,onChange:handleChange}),errors.confirmPassword&&/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:errors.confirmPassword})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"email\",name:\"email\",placeholder:\"\\uC774\\uBA54\\uC77C\",value:formData.email,onChange:handleChange}),\"@\",/*#__PURE__*/_jsxs(\"select\",{id:\"emailDomain\",name:\"emailDomain\",value:formData.emailDomain,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(\"option\",{value:\"gmail.com\",children:\"gmail.com\"}),/*#__PURE__*/_jsx(\"option\",{value:\"naver.com\",children:\"naver.com\"})]})]}),errors.email&&/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:errors.email}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uAC00\\uC785\\uD558\\uAE30\"})]})});};export default Signup;","map":{"version":3,"names":["React","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Signup","formData","setFormData","username","password","confirmPassword","email","emailDomain","errors","setErrors","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","validateForm","newErrors","trim","test","Object","keys","length","requestData","concat","post","alert","error","console","log","message","onSubmit","children","className","type","id","placeholder","onChange"],"sources":["C:/Users/user/mk/backend/src/frontend/src/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Signup.css';\r\n\r\nconst Signup = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    email: '',\r\n    emailDomain: '', // 이메일 도메인 추가\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    // 입력 필드에 대한 에러가 있었다면 에러를 제거\r\n    if (errors[name]) {\r\n      setErrors({ ...errors, [name]: '' });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const validateForm = () => {\r\n      const newErrors = {};\r\n      if (!formData.username.trim()) {\r\n        newErrors.username = '이름을 입력해주세요';\r\n      }\r\n      if (!formData.password.trim()) {\r\n        newErrors.password = '비밀번호를 입력해주세요';\r\n      } else if (!/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,10}$/.test(formData.password)) {\r\n        newErrors.password = '영문과 숫자를 포함한 8~10자 비밀번호를 입력해주세요';\r\n      }\r\n      if (!formData.confirmPassword.trim()) {\r\n        newErrors.confirmPassword = '비밀번호 확인을 입력해주세요';\r\n      } else if (formData.confirmPassword !== formData.password) {\r\n        newErrors.confirmPassword = '비밀번호가 일치하지 않습니다';\r\n      }\r\n      if (!formData.email.trim() || !formData.emailDomain.trim()) {\r\n        newErrors.email = '이메일을 입력해주세요';\r\n      }\r\n      return newErrors;\r\n    };\r\n\r\n    const errors = validateForm();\r\n\r\n    // 유효성 검사 통과 시, 회원가입 처리\r\n    if (Object.keys(errors).length === 0) {\r\n      try {\r\n        // 서버로 전송할 데이터\r\n        const requestData = {\r\n          username: formData.username,\r\n          password: formData.password,\r\n          email: `${formData.email}@${formData.emailDomain}`\r\n        };\r\n        await axios.post('/api/signup', requestData);\r\n        alert('회원가입 성공!');\r\n        navigate('/');\r\n      } catch (error) {\r\n        console.log('에러:', error.message);\r\n        alert('서버 오류가 발생했습니다.');\r\n      }\r\n    } else {\r\n      setErrors(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"signup-box\">\r\n        <h1>회원가입</h1>\r\n        <div>\r\n          <input type=\"username\" id=\"username\" name=\"username\" placeholder=\"이름\" value={formData.username} onChange={handleChange} />\r\n          {errors.username && <span className=\"error\">{errors.username}</span>}\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"비밀번호\" value={formData.password} onChange={handleChange} />\r\n          {errors.password && <span className=\"error\">{errors.password}</span>}\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"비밀번호 확인\" value={formData.confirmPassword} onChange={handleChange} />\r\n          {errors.confirmPassword && <span className=\"error\">{errors.confirmPassword}</span>}\r\n        </div>\r\n        <div>\r\n          <input type=\"text\" id=\"email\" name=\"email\" placeholder=\"이메일\" value={formData.email} onChange={handleChange} />\r\n          @\r\n          <select id=\"emailDomain\" name=\"emailDomain\" value={formData.emailDomain} onChange={handleChange}>\r\n            <option value=\"\">선택</option>\r\n            <option value=\"gmail.com\">gmail.com</option>\r\n            <option value=\"naver.com\">naver.com</option>\r\n          </select>\r\n        </div>\r\n        {errors.email && <span className=\"error\">{errors.email}</span>}\r\n          <button type=\"submit\">가입하기</button>\r\n        </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Signup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}