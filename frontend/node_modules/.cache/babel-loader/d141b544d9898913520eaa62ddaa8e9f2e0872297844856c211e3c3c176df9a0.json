{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\mk\\\\frontend\\\\src\\\\components\\\\NewsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport NewsItem from './NewsItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsListBlock = styled.div`\n    box-sizing: border-box;\n    padding-bottom: 3rem;\n    width: 768px;\n    margin: 0 auto;\n    margin-top: 2rem;\n    @media screen and (max-width: 768px) {\n        width: 100%;\n        padding-left: 1rem;\n        padding-right: 1rem;\n    }\n`;\n_c = NewsListBlock;\nconst NewsList = ({\n  category\n}) => {\n  _s();\n  const [articles, setArticles] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        console.log(`Fetching news for category: ${category}`);\n        const response = await axios.get(`/api/news`, {\n          params: {\n            category\n          } // 카테고리 값을 쿼리 파라미터로 전달\n        });\n        console.log('News fetched successfully:', response.data);\n        setArticles(response.data.articles);\n      } catch (e) {\n        console.log('Error fetching news:', e);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [category]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(NewsListBlock, {\n      children: \"\\uB300\\uAE30 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  if (!articles) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(NewsListBlock, {\n    children: articles.map(article => /*#__PURE__*/_jsxDEV(NewsItem, {\n      article: article\n    }, article.url, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(NewsList, \"BrV4hxJHQDgbXXsCKLJH/cawVkg=\");\n_c2 = NewsList;\nexport default NewsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"NewsListBlock\");\n$RefreshReg$(_c2, \"NewsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","NewsItem","jsxDEV","_jsxDEV","NewsListBlock","div","_c","NewsList","category","_s","articles","setArticles","loading","setLoading","fetchData","console","log","response","get","params","data","e","children","fileName","_jsxFileName","lineNumber","columnNumber","map","article","url","_c2","$RefreshReg$"],"sources":["C:/Users/user/mk/frontend/src/components/NewsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport NewsItem from './NewsItem';\r\n\r\nconst NewsListBlock = styled.div`\r\n    box-sizing: border-box;\r\n    padding-bottom: 3rem;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n    @media screen and (max-width: 768px) {\r\n        width: 100%;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n    }\r\n`;\r\n\r\nconst NewsList = ({ category }) => {\r\n    const [articles, setArticles] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                console.log(`Fetching news for category: ${category}`);\r\n                const response = await axios.get(`/api/news`, {\r\n                    params: { category } // 카테고리 값을 쿼리 파라미터로 전달\r\n                });\r\n                console.log('News fetched successfully:', response.data);\r\n                setArticles(response.data.articles);\r\n            } catch (e) {\r\n                console.log('Error fetching news:', e);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        fetchData();\r\n    }, [category]);\r\n\r\n    if (loading) {\r\n        return <NewsListBlock>대기 중...</NewsListBlock>;\r\n    }\r\n    if (!articles) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <NewsListBlock>\r\n            {articles.map(article => (\r\n                <NewsItem key={article.url} article={article} />\r\n            ))}\r\n        </NewsListBlock>\r\n    );\r\n};\r\n\r\nexport default NewsList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIF,aAAa;AAanB,MAAMG,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACAE,OAAO,CAACC,GAAG,CAAC,+BAA+BR,QAAQ,EAAE,CAAC;QACtD,MAAMS,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,WAAW,EAAE;UAC1CC,MAAM,EAAE;YAAEX;UAAS,CAAC,CAAC;QACzB,CAAC,CAAC;QACFO,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,QAAQ,CAACG,IAAI,CAAC;QACxDT,WAAW,CAACM,QAAQ,CAACG,IAAI,CAACV,QAAQ,CAAC;MACvC,CAAC,CAAC,OAAOW,CAAC,EAAE;QACRN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEK,CAAC,CAAC;MAC1C;MACAR,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IACDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,IAAII,OAAO,EAAE;IACT,oBAAOT,OAAA,CAACC,aAAa;MAAAkB,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EACjD;EACA,IAAI,CAAChB,QAAQ,EAAE;IACX,OAAO,IAAI;EACf;EAEA,oBACIP,OAAA,CAACC,aAAa;IAAAkB,QAAA,EACTZ,QAAQ,CAACiB,GAAG,CAACC,OAAO,iBACjBzB,OAAA,CAACF,QAAQ;MAAmB2B,OAAO,EAAEA;IAAQ,GAA9BA,OAAO,CAACC,GAAG;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAExB,CAAC;AAACjB,EAAA,CApCIF,QAAQ;AAAAuB,GAAA,GAARvB,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}