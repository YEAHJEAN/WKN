{"ast":null,"code":"import React,{useState,useEffect}from'react';import io from'socket.io-client';import{useParams}from'react-router-dom';import'./Chat.css';import ChatUsers from'./ChatUsers';import ChatroomList2 from'./ChatroomList2';// ChatroomList2 컴포넌트 추가\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io('https://kmk510.store',{secure:true,transports:['websocket','polling']});function Chat(){const{chatroom,username}=useParams();const userId=123;// 예시로 userId를 정의\nconst[currentChat,setCurrentChat]=useState(chatroom||'general');const[message,setMessage]=useState('');const[messages,setMessages]=useState([]);const[userJoined,setUserJoined]=useState('');useEffect(()=>{console.log('URL params:',{chatroom,username});// 클라이언트가 채팅방에 입장합니다.\nif(chatroom&&username){console.log(\"User \".concat(username,\" has joined chatroom \").concat(chatroom));socket.emit('joinRoom',chatroom);}if(currentChat&&username){socket.emit('joinRoom',currentChat);socket.on('initialMessages',initialMessages=>{setMessages(initialMessages);});socket.on('Chat',msg=>{setMessages(prevMessages=>[...prevMessages,msg]);});socket.on('userJoined',username=>{setUserJoined(\"\".concat(username,\"\\uB2D8\\uC774 \\uCC44\\uD305\\uBC29\\uC5D0 \\uC785\\uC7A5\\uD588\\uC2B5\\uB2C8\\uB2E4.\"));});return()=>{socket.off('initialMessages');socket.off('Chat');socket.off('userJoined');};}},[chatroom,username,currentChat]);const sendMessage=()=>{if(message.trim()&&username){socket.emit('Chat',{username,message,chatroom:currentChat});setMessage('');}};const handleKeyDown=event=>{if(event.key==='Enter'){sendMessage();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-and-users-container\",children:[/*#__PURE__*/_jsx(ChatroomList2,{username:username}),\" \",/*#__PURE__*/_jsx(ChatUsers,{chatroomId:chatroom}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Chat\"}),/*#__PURE__*/_jsx(\"hr\",{}),\" \",userJoined&&/*#__PURE__*/_jsx(\"div\",{className:\"user-joined\",children:userJoined}),/*#__PURE__*/_jsx(\"div\",{className:\"messages-container\",children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(msg.username===username?'sent-message':'received-message'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"username\",children:[msg.username,\":\"]}),\" \",msg.message]}),/*#__PURE__*/_jsxs(\"span\",{className:\"timestamp\",children:[\"(\",new Date(msg.timestamp).getHours(),\":\",new Date(msg.timestamp).getMinutes(),\")\"]})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"message-input\",value:message,onChange:e=>setMessage(e.target.value),onKeyDown:handleKeyDown}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,className:\"send-button\",children:\"Send\"})]})]})]});}export default Chat;","map":{"version":3,"names":["React","useState","useEffect","io","useParams","ChatUsers","ChatroomList2","jsx","_jsx","jsxs","_jsxs","socket","secure","transports","Chat","chatroom","username","userId","currentChat","setCurrentChat","message","setMessage","messages","setMessages","userJoined","setUserJoined","console","log","concat","emit","on","initialMessages","msg","prevMessages","off","sendMessage","trim","handleKeyDown","event","key","className","children","chatroomId","map","index","Date","timestamp","getHours","getMinutes","type","value","onChange","e","target","onKeyDown","onClick"],"sources":["C:/Users/user/mk/frontend/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Chat.css';\r\nimport ChatUsers from './ChatUsers';\r\nimport ChatroomList2 from './ChatroomList2'; // ChatroomList2 컴포넌트 추가\r\n\r\nconst socket = io('https://kmk510.store', {\r\n  secure: true,\r\n  transports: ['websocket', 'polling']\r\n});\r\n\r\nfunction Chat() {\r\n  const { chatroom, username } = useParams();\r\n  const userId = 123; // 예시로 userId를 정의\r\n  const [currentChat, setCurrentChat] = useState(chatroom || 'general');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [userJoined, setUserJoined] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('URL params:', { chatroom, username });\r\n\r\n    // 클라이언트가 채팅방에 입장합니다.\r\n    if (chatroom && username) {\r\n      console.log(`User ${username} has joined chatroom ${chatroom}`);\r\n      socket.emit('joinRoom', chatroom);\r\n    }\r\n\r\n    if (currentChat && username) {\r\n      socket.emit('joinRoom', currentChat);\r\n\r\n      socket.on('initialMessages', (initialMessages) => {\r\n        setMessages(initialMessages);\r\n      });\r\n\r\n      socket.on('Chat', (msg) => {\r\n        setMessages((prevMessages) => [...prevMessages, msg]);\r\n      });\r\n\r\n      socket.on('userJoined', (username) => {\r\n        setUserJoined(`${username}님이 채팅방에 입장했습니다.`);\r\n      });\r\n\r\n      return () => {\r\n        socket.off('initialMessages');\r\n        socket.off('Chat');\r\n        socket.off('userJoined');\r\n      };\r\n    }\r\n  }, [chatroom, username, currentChat]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim() && username) {\r\n      socket.emit('Chat', { username, message, chatroom: currentChat });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-and-users-container\">\r\n      <ChatroomList2 username={username} /> {/* ChatroomList2 컴포넌트 추가 */}\r\n      <ChatUsers chatroomId={chatroom} />\r\n      <div className=\"chat-container\">\r\n        <h1>Chat</h1>\r\n        <hr /> {/* 가로 경계선 추가 */}\r\n        {userJoined && <div className=\"user-joined\">{userJoined}</div>}\r\n        <div className=\"messages-container\">\r\n          {messages.map((msg, index) => (\r\n            <div className={`message ${msg.username === username ? 'sent-message' : 'received-message'}`} key={index}>\r\n              <div className=\"message-bubble\">\r\n                <span className=\"username\">{msg.username}:</span> {msg.message}\r\n              </div>\r\n              <span className=\"timestamp\">({new Date(msg.timestamp).getHours()}:{new Date(msg.timestamp).getMinutes()})</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"message-input-container\">\r\n        <input type=\"text\" className=\"message-input\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyDown={handleKeyDown} />\r\n          <button onClick={sendMessage} className=\"send-button\">Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}