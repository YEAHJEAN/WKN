{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate,useLocation}from'react-router-dom';import axios from'axios';import'./PostDetail.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PostDetail=()=>{const navigate=useNavigate();const location=useLocation();const{id}=useParams();const[post,setPost]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[email,setEmail]=useState(\"\");const[isEditing,setIsEditing]=useState(new URLSearchParams(location.search).get('editing')==='true');const[editedTitle,setEditedTitle]=useState('');const[editedContent,setEditedContent]=useState('');const[newComment,setNewComment]=useState('');const[comments,setComments]=useState([]);const[showEditDeleteButtons,setShowEditDeleteButtons]=useState(false);const[imageUrl,setImageUrl]=useState(\"\");// 이미지 URL 상태 추가\nuseEffect(()=>{if(isEditing){sessionStorage.setItem('editedTitle',editedTitle);sessionStorage.setItem('editedContent',editedContent);}},[isEditing,editedTitle,editedContent]);useEffect(()=>{if(isEditing){const storedTitle=sessionStorage.getItem('editedTitle');const storedContent=sessionStorage.getItem('editedContent');if(storedTitle&&storedContent){setEditedTitle(storedTitle);setEditedContent(storedContent);}else{setEditedTitle((post===null||post===void 0?void 0:post.title)||'');setEditedContent((post===null||post===void 0?void 0:post.content)||'');}}},[isEditing,post]);const fetchComments=async()=>{try{const response=await axios.get(\"/api/posts/\".concat(id,\"/comments\"));if(Array.isArray(response.data)){setComments(response.data);}else{setComments([]);// 데이터가 배열이 아닌 경우 빈 배열로 설정\nconsole.error('댓글 데이터가 배열이 아닙니다:',response.data);}}catch(error){console.error('댓글을 불러오는 중 오류 발생:',error);}};useEffect(()=>{const fetchPost=async()=>{try{const response=await axios.get(\"/api/posts/\".concat(id));setPost(response.data);setImageUrl(response.data.imageUrl);// 이미지 URL 설정\nsetLoading(false);// 이미지 URL 설정 후에 로딩 상태 변경\n}catch(error){console.error('게시글을 불러오는 중 오류 발생:',error);setError('게시글을 불러오는 중 오류가 발생했습니다.');}};const emailFromSession=sessionStorage.getItem(\"email\");if(emailFromSession){setEmail(emailFromSession);}fetchPost();fetchComments();},[id]);useEffect(()=>{setIsEditing(new URLSearchParams(location.search).get('editing')==='true');},[location.search]);const handleClick=()=>{navigate('/home');};const handleEdit=()=>{navigate(\"?editing=true\");setIsEditing(true);setEditedTitle(post.title);setEditedContent(post.content);};const handleSave=async()=>{try{if(!editedTitle.trim()||!editedContent.trim()){alert('제목과 내용을 모두 입력하세요.');return;}await axios.put(\"/api/posts/\".concat(id),{title:editedTitle,content:editedContent,author:post.author});const response=await axios.get(\"/api/posts/\".concat(id));setPost(response.data);setIsEditing(false);sessionStorage.removeItem('editedTitle');sessionStorage.removeItem('editedContent');alert('수정되었습니다.');}catch(error){console.error('게시글을 수정하는 중 오류 발생:',error);setError('게시글을 수정하는 중 오류가 발생했습니다.');}};const handleCancel=()=>{setIsEditing(false);sessionStorage.removeItem('editedTitle');sessionStorage.removeItem('editedContent');};const handleDelete=async()=>{try{await axios.delete(\"/api/posts/\".concat(id));alert('삭제되었습니다.');navigate('/home');}catch(error){console.error('게시글을 삭제하는 중 오류 발생:',error);setError('게시글을 삭제하는 중 오류가 발생했습니다.');}};const handleCommentSubmit=async()=>{try{if(!newComment.trim()){alert('댓글을 입력하세요.');return;}await axios.post(\"/api/posts/\".concat(id,\"/comments\"),{author:email,content:newComment});fetchComments();setNewComment('');}catch(error){console.error('댓글 작성 중 오류 발생:',error);setError('댓글 작성 중 오류가 발생했습니다.');}};// 댓글 삭제 핸들러 함수 추가\nconst handleCommentDelete=async commentId=>{try{await axios.delete(\"/api/posts/\".concat(id,\"/comments/\").concat(commentId));alert('댓글이 삭제되었습니다.');fetchComments();}catch(error){console.error('댓글 삭제 중 오류 발생:',error);setError('댓글 삭제 중 오류가 발생했습니다.');}};const handleImageClick=()=>{setShowEditDeleteButtons(!showEditDeleteButtons);};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsx(\"div\",{children:error});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleClick,style:{cursor:'pointer',border:'none',background:'none',width:'300px',display:'block',margin:'0 auto',outline:'none'},children:/*#__PURE__*/_jsx(\"img\",{src:\"/Home.jpg\",alt:\"Go to Home\",style:{width:'250px',height:'120px'}})}),!isEditing&&/*#__PURE__*/_jsxs(\"div\",{className:\"postdetail-box\",children:[/*#__PURE__*/_jsx(\"h1\",{children:post.title}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uCE74\\uD14C\\uACE0\\uB9AC: \",post.category,\" | \\uC791\\uC131\\uC790: \",post.author,\" | \\uC791\\uC131\\uC77C: \",new Date(post.created_at).toLocaleDateString('ko-KR')]}),post.imageUrl&&/*#__PURE__*/_jsx(\"img\",{src:post.imageUrl,alt:\"Post\",style:{maxWidth:'100%',maxHeight:'300px',marginBottom:'10px'}}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"content-wrapper\",children:[/*#__PURE__*/_jsx(\"p\",{children:post.content}),/*#__PURE__*/_jsx(\"hr\",{})]}),/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleImageClick,className:\"toggle-button\",children:/*#__PURE__*/_jsx(\"img\",{src:\"/Button.png\",alt:\"Show Edit/Delete\"})}),showEditDeleteButtons&&email===post.author&&/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"edit-button\",onClick:handleEdit,children:\"\\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"div\",{className:\"vertical-separator\"}),\" \",/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:handleDelete,children:\"\\uC0AD\\uC81C\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comments-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB313\\uAE00\"}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"4\",cols:\"50\",value:newComment,onChange:e=>setNewComment(e.target.value),placeholder:\"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{className:\"comment-button\",onClick:handleCommentSubmit,children:\"\\uC791\\uC131\"}),/*#__PURE__*/_jsx(\"div\",{className:\"comments-scroll\",style:{maxHeight:'150px',overflowY:'auto'},children:/*#__PURE__*/_jsx(\"ul\",{children:comments.map((comment,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"comment-item \".concat(showEditDeleteButtons?'with-buttons':''),children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC791\\uC131\\uC790: \",comment.author]}),/*#__PURE__*/_jsx(\"p\",{children:comment.content}),comment.author===email&&/*#__PURE__*/_jsx(\"button\",{className:\"comment-delete-button\",onClick:()=>handleCommentDelete(comment.comment_id),children:\"\\uC0AD\\uC81C\"})]},comment.comment_id))})})]})]}),isEditing&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"edit-input\",value:editedTitle,onChange:e=>setEditedTitle(e.target.value)}),/*#__PURE__*/_jsx(\"textarea\",{className:\"edit-textarea\",value:editedContent,onChange:e=>setEditedContent(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"save-button\",onClick:handleSave,children:\"\\uC800\\uC7A5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cancel-button\",onClick:handleCancel,children:\"\\uCDE8\\uC18C\"})]})]});};export default PostDetail;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","axios","jsx","_jsx","jsxs","_jsxs","PostDetail","navigate","location","id","post","setPost","loading","setLoading","error","setError","email","setEmail","isEditing","setIsEditing","URLSearchParams","search","get","editedTitle","setEditedTitle","editedContent","setEditedContent","newComment","setNewComment","comments","setComments","showEditDeleteButtons","setShowEditDeleteButtons","imageUrl","setImageUrl","sessionStorage","setItem","storedTitle","getItem","storedContent","title","content","fetchComments","response","concat","Array","isArray","data","console","fetchPost","emailFromSession","handleClick","handleEdit","handleSave","trim","alert","put","author","removeItem","handleCancel","handleDelete","delete","handleCommentSubmit","handleCommentDelete","commentId","handleImageClick","children","onClick","style","cursor","border","background","width","display","margin","outline","src","alt","height","className","category","Date","created_at","toLocaleDateString","maxWidth","maxHeight","marginBottom","rows","cols","value","onChange","e","target","placeholder","overflowY","map","comment","index","comment_id","type"],"sources":["C:/Users/user/mk/frontend/src/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './PostDetail.css';\r\n\r\nconst PostDetail = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isEditing, setIsEditing] = useState(new URLSearchParams(location.search).get('editing') === 'true');\r\n  const [editedTitle, setEditedTitle] = useState('');\r\n  const [editedContent, setEditedContent] = useState('');\r\n  const [newComment, setNewComment] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [showEditDeleteButtons, setShowEditDeleteButtons] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState(\"\"); // 이미지 URL 상태 추가\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      sessionStorage.setItem('editedTitle', editedTitle);\r\n      sessionStorage.setItem('editedContent', editedContent);\r\n    }\r\n  }, [isEditing, editedTitle, editedContent]);\r\n\r\n  useEffect(() => {\r\n    if (isEditing) {\r\n      const storedTitle = sessionStorage.getItem('editedTitle');\r\n      const storedContent = sessionStorage.getItem('editedContent');\r\n      if (storedTitle && storedContent) {\r\n        setEditedTitle(storedTitle);\r\n        setEditedContent(storedContent);\r\n      } else {\r\n        setEditedTitle(post?.title || '');\r\n        setEditedContent(post?.content || '');\r\n      }\r\n    }\r\n  }, [isEditing, post]);\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const response = await axios.get(`/api/posts/${id}/comments`);\r\n      if (Array.isArray(response.data)) {\r\n        setComments(response.data);\r\n      } else {\r\n        setComments([]); // 데이터가 배열이 아닌 경우 빈 배열로 설정\r\n        console.error('댓글 데이터가 배열이 아닙니다:', response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('댓글을 불러오는 중 오류 발생:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/posts/${id}`);\r\n        setPost(response.data);\r\n        setImageUrl(response.data.imageUrl); // 이미지 URL 설정\r\n        setLoading(false); // 이미지 URL 설정 후에 로딩 상태 변경\r\n      } catch (error) {\r\n        console.error('게시글을 불러오는 중 오류 발생:', error);\r\n        setError('게시글을 불러오는 중 오류가 발생했습니다.');\r\n      }\r\n    };\r\n\r\n    const emailFromSession = sessionStorage.getItem(\"email\");\r\n    if (emailFromSession) {\r\n      setEmail(emailFromSession);\r\n    }\r\n\r\n    fetchPost();\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    setIsEditing(new URLSearchParams(location.search).get('editing') === 'true');\r\n  }, [location.search]);\r\n\r\n  const handleClick = () => {\r\n    navigate('/home');\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    navigate(`?editing=true`);\r\n    setIsEditing(true);\r\n    setEditedTitle(post.title);\r\n    setEditedContent(post.content);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      if (!editedTitle.trim() || !editedContent.trim()) {\r\n        alert('제목과 내용을 모두 입력하세요.');\r\n        return;\r\n      }\r\n\r\n      await axios.put(`/api/posts/${id}`, {\r\n        title: editedTitle,\r\n        content: editedContent,\r\n        author: post.author,\r\n      });\r\n\r\n      const response = await axios.get(`/api/posts/${id}`);\r\n      setPost(response.data);\r\n\r\n      setIsEditing(false);\r\n      sessionStorage.removeItem('editedTitle');\r\n      sessionStorage.removeItem('editedContent');\r\n      alert('수정되었습니다.');\r\n    } catch (error) {\r\n      console.error('게시글을 수정하는 중 오류 발생:', error);\r\n      setError('게시글을 수정하는 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    sessionStorage.removeItem('editedTitle');\r\n    sessionStorage.removeItem('editedContent');\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(`/api/posts/${id}`);\r\n      alert('삭제되었습니다.');\r\n      navigate('/home');\r\n    } catch (error) {\r\n      console.error('게시글을 삭제하는 중 오류 발생:', error);\r\n      setError('게시글을 삭제하는 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async () => {\r\n    try {\r\n      if (!newComment.trim()) {\r\n        alert('댓글을 입력하세요.');\r\n        return;\r\n      }\r\n\r\n      await axios.post(`/api/posts/${id}/comments`, {\r\n        author: email,\r\n        content: newComment,\r\n      });\r\n\r\n      fetchComments();\r\n      setNewComment('');\r\n    } catch (error) {\r\n      console.error('댓글 작성 중 오류 발생:', error);\r\n      setError('댓글 작성 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  // 댓글 삭제 핸들러 함수 추가\r\n  const handleCommentDelete = async (commentId) => {\r\n    try {\r\n      await axios.delete(`/api/posts/${id}/comments/${commentId}`);\r\n      alert('댓글이 삭제되었습니다.');\r\n      fetchComments();\r\n    } catch (error) {\r\n      console.error('댓글 삭제 중 오류 발생:', error);\r\n      setError('댓글 삭제 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleImageClick = () => {\r\n    setShowEditDeleteButtons(!showEditDeleteButtons);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleClick} style={{ cursor: 'pointer', border: 'none', background: 'none', width: '300px', display: 'block', margin: '0 auto', outline: 'none' }}>\r\n        <img src=\"/Home.jpg\" alt=\"Go to Home\" style={{ width: '250px', height: '120px' }} />\r\n      </button>\r\n      {!isEditing && (\r\n        <div className=\"postdetail-box\">\r\n          <h1>{post.title}</h1>\r\n          <p>카테고리: {post.category} | 작성자: {post.author} | 작성일: {new Date(post.created_at).toLocaleDateString('ko-KR')}</p>\r\n          {/* 이미지 보여주기 */}\r\n          {post.imageUrl && <img src={post.imageUrl} alt=\"Post\" style={{ maxWidth: '100%', maxHeight: '300px', marginBottom: '10px' }} />}\r\n          <hr />\r\n          <div className=\"content-wrapper\">\r\n            <p>{post.content}</p>\r\n            <hr />\r\n          </div>\r\n          <span>\r\n            <button onClick={handleImageClick} className=\"toggle-button\">\r\n              <img src=\"/Button.png\" alt=\"Show Edit/Delete\" />\r\n            </button>\r\n            {showEditDeleteButtons && email === post.author && (\r\n              <div className=\"button-container\">\r\n                <button className=\"edit-button\" onClick={handleEdit}>수정</button>\r\n                <div className=\"vertical-separator\"></div> {/* 세로 경계선 추가 */}\r\n                <button className=\"delete-button\" onClick={handleDelete}>삭제</button>\r\n              </div>\r\n            )}\r\n          </span>\r\n          {/* 댓글 작성 폼은 게시글 상자 안에 있습니다. */}\r\n          <div className=\"comments-section\">\r\n            <h2>댓글</h2>\r\n            <textarea rows=\"4\" cols=\"50\" value={newComment} onChange={(e) => setNewComment(e.target.value)} placeholder=\"댓글을 입력하세요\" />\r\n            <button className=\"comment-button\" onClick={handleCommentSubmit}>작성</button>\r\n            {/* 댓글 목록은 댓글 작성 폼 아래에 표시되며 스크롤 가능합니다. */}\r\n            <div className=\"comments-scroll\" style={{ maxHeight: '150px', overflowY: 'auto' }}>\r\n              <ul>\r\n                {comments.map((comment, index) => (\r\n                  <li key={comment.comment_id} className={`comment-item ${showEditDeleteButtons ? 'with-buttons' : ''}`}>\r\n                  <p>작성자: {comment.author}</p>\r\n                  <p>{comment.content}</p>\r\n                  {/* 삭제 버튼 추가 */}\r\n                  {comment.author === email && (\r\n                    <button className=\"comment-delete-button\" onClick={() => handleCommentDelete(comment.comment_id)}>삭제</button>\r\n                  )}\r\n                </li>                                             \r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isEditing && (\r\n        <div>\r\n          <input type=\"text\" className=\"edit-input\" value={editedTitle} onChange={(e) => setEditedTitle(e.target.value)} />\r\n          <textarea className=\"edit-textarea\" value={editedContent} onChange={(e) => setEditedContent(e.target.value)} />\r\n          <button className=\"save-button\" onClick={handleSave}>저장</button>\r\n          <button className=\"cancel-button\" onClick={handleCancel}>취소</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}