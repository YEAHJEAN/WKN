{"ast":null,"code":"import React,{useState,useEffect}from'react';import io from'socket.io-client';import{useParams}from'react-router-dom';import'./Chat.css';import ChatUsers from'./ChatUsers';import ChatroomList2 from'./ChatroomList2';// ChatroomList2 컴포넌트 추가\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io('https://kmk510.store',{secure:true,transports:['websocket','polling']});function Chat(){const{chatroom:chatroomParam,username}=useParams();const userId=123;// 예시로 userId를 정의\nconst[currentChat,setCurrentChat]=useState(chatroom||'general');const[message,setMessage]=useState('');const[messages,setMessages]=useState([]);const[userJoined,setUserJoined]=useState('');useEffect(()=>{console.log('URL params:',{chatroom:chatroomParam,username});// 클라이언트가 채팅방에 입장합니다.\nif(chatroomParam&&username){console.log(\"User \".concat(username,\" has joined chatroom \").concat(chatroomParam));socket.emit('joinRoom',{roomId:chatroomParam,username});}if(currentChat&&username){socket.emit('joinRoom',{roomId:currentChat,username});socket.on('initialMessages',initialMessages=>{setMessages(initialMessages);});socket.on('Chat',msg=>{setMessages(prevMessages=>[...prevMessages,msg]);});socket.on('userJoined',msg=>{setUserJoinedMessage(\"\".concat(msg.username,\"\\uB2D8\\uC774 \\uCC44\\uD305\\uBC29\\uC5D0 \\uC785\\uC7A5\\uD588\\uC2B5\\uB2C8\\uB2E4.\"));const joinMessage={username:'System',message:\"\".concat(msg.username,\"\\uB2D8\\uC774 \\uCC44\\uD305\\uBC29\\uC5D0 \\uC785\\uC7A5\\uD588\\uC2B5\\uB2C8\\uB2E4.\"),timestamp:new Date()};setMessages(prevMessages=>[...prevMessages,joinMessage]);});return()=>{socket.off('initialMessages');socket.off('Chat');socket.off('userJoined');};}},[chatroomParam,username,currentChat]);const sendMessage=()=>{if(message.trim()&&username){socket.emit('Chat',{username,message,chatroom:currentChat});setMessage('');}};const handleKeyPress=event=>{if(event.key==='Enter'){sendMessage();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-and-users-container\",children:[/*#__PURE__*/_jsx(ChatroomList2,{username:username}),/*#__PURE__*/_jsx(ChatUsers,{chatroomId:chatroomParam}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Chat\"}),/*#__PURE__*/_jsx(\"hr\",{}),userJoinedMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"user-joined\",children:userJoinedMessage}),/*#__PURE__*/_jsx(\"div\",{className:\"messages-container\",children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(msg.username===username?'sent-message':'received-message'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-bubble\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"username\",children:[msg.username,\":\"]}),\" \",msg.message]}),/*#__PURE__*/_jsxs(\"span\",{className:\"timestamp\",children:[\"(\",new Date(msg.timestamp).getHours(),\":\",new Date(msg.timestamp).getMinutes(),\")\"]})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"message-input\",value:message,onChange:e=>setMessage(e.target.value),onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,className:\"send-button\",children:\"\\uC804\\uC1A1\"})]})]})]});}export default Chat;","map":{"version":3,"names":["React","useState","useEffect","io","useParams","ChatUsers","ChatroomList2","jsx","_jsx","jsxs","_jsxs","socket","secure","transports","Chat","chatroom","chatroomParam","username","userId","currentChat","setCurrentChat","message","setMessage","messages","setMessages","userJoined","setUserJoined","console","log","concat","emit","roomId","on","initialMessages","msg","prevMessages","setUserJoinedMessage","joinMessage","timestamp","Date","off","sendMessage","trim","handleKeyPress","event","key","className","children","chatroomId","userJoinedMessage","map","index","getHours","getMinutes","type","value","onChange","e","target","onKeyPress","onClick"],"sources":["C:/Users/user/mk/frontend/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Chat.css';\r\nimport ChatUsers from './ChatUsers';\r\nimport ChatroomList2 from './ChatroomList2'; // ChatroomList2 컴포넌트 추가\r\n\r\nconst socket = io('https://kmk510.store', {\r\n  secure: true,\r\n  transports: ['websocket', 'polling']\r\n});\r\n\r\nfunction Chat() {\r\n  const { chatroom: chatroomParam, username } = useParams();\r\n  const userId = 123; // 예시로 userId를 정의\r\n  const [currentChat, setCurrentChat] = useState(chatroom || 'general');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [userJoined, setUserJoined] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('URL params:', { chatroom: chatroomParam, username });\r\n\r\n    // 클라이언트가 채팅방에 입장합니다.\r\n    if (chatroomParam && username) {\r\n      console.log(`User ${username} has joined chatroom ${chatroomParam}`);\r\n      socket.emit('joinRoom', { roomId: chatroomParam, username });\r\n    }\r\n\r\n    if (currentChat && username) {\r\n      socket.emit('joinRoom', { roomId: currentChat, username });\r\n\r\n      socket.on('initialMessages', (initialMessages) => {\r\n        setMessages(initialMessages);\r\n      });\r\n\r\n      socket.on('Chat', (msg) => {\r\n        setMessages((prevMessages) => [...prevMessages, msg]);\r\n      });\r\n\r\n      socket.on('userJoined', (msg) => {\r\n        setUserJoinedMessage(`${msg.username}님이 채팅방에 입장했습니다.`);\r\n        const joinMessage = {\r\n          username: 'System',\r\n          message: `${msg.username}님이 채팅방에 입장했습니다.`,\r\n          timestamp: new Date()\r\n        };\r\n        setMessages((prevMessages) => [...prevMessages, joinMessage]);\r\n      });\r\n\r\n      return () => {\r\n        socket.off('initialMessages');\r\n        socket.off('Chat');\r\n        socket.off('userJoined');\r\n      };\r\n    }\r\n  }, [chatroomParam, username, currentChat]);\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim() && username) {\r\n      socket.emit('Chat', { username, message, chatroom: currentChat });\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-and-users-container\">\r\n      <ChatroomList2 username={username} />\r\n      <ChatUsers chatroomId={chatroomParam} />\r\n      <div className=\"chat-container\">\r\n        <h1>Chat</h1>\r\n        <hr />\r\n        {userJoinedMessage && <div className=\"user-joined\">{userJoinedMessage}</div>}\r\n        <div className=\"messages-container\">\r\n          {messages.map((msg, index) => (\r\n            <div className={`message ${msg.username === username ? 'sent-message' : 'received-message'}`} key={index}>\r\n              <div className=\"message-bubble\">\r\n                <span className=\"username\">{msg.username}:</span> {msg.message}\r\n              </div>\r\n              <span className=\"timestamp\">({new Date(msg.timestamp).getHours()}:{new Date(msg.timestamp).getMinutes()})</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"message-input-container\">\r\n          <input type=\"text\" className=\"message-input\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyPress={handleKeyPress} />\r\n          <button onClick={sendMessage} className=\"send-button\">전송</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}