{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\mk\\\\frontend\\\\src\\\\Chatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './Chatroom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://43.202.124.253:3001');\nfunction Chatroom() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [chatroomNameInput, setChatroomNameInput] = useState('');\n  useEffect(() => {\n    const storedEmail = sessionStorage.getItem('email');\n    if (storedEmail) {\n      console.log('이메일 가져오기 성공:', storedEmail);\n      fetchUserData(storedEmail);\n    }\n  }, []);\n  const fetchUserData = async email => {\n    try {\n      const response = await axios.get(`http://localhost:3001/userdata?email=${email}`);\n      if (response.status === 200) {\n        console.log('유저 데이터 가져오기 성공:', response.data);\n        setUsername(response.data.username);\n      } else {\n        console.error('사용자 데이터 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('사용자 데이터 가져오기 실패:', error);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (username.trim() !== '' && chatroomNameInput.trim() !== '') {\n      navigate(`/chat/${chatroomNameInput}/${username}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatroom-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter Chatroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"chatroom\",\n          value: chatroomNameInput,\n          onChange: e => setChatroomNameInput(e.target.value),\n          placeholder: \"\\uCC44\\uD305\\uBC29 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatroom, \"ieSPiZ9EwxzQKot/Jq6oh2Rt7Zo=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","io","axios","jsxDEV","_jsxDEV","socket","Chatroom","_s","navigate","username","setUsername","chatroomNameInput","setChatroomNameInput","storedEmail","sessionStorage","getItem","console","log","fetchUserData","email","response","get","status","data","error","handleSubmit","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","value","readOnly","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/user/mk/frontend/src/Chatroom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport './Chatroom.css';\r\n\r\nconst socket = io('http://43.202.124.253:3001');\r\n\r\nfunction Chatroom() {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [chatroomNameInput, setChatroomNameInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedEmail = sessionStorage.getItem('email');\r\n    if (storedEmail) {\r\n      console.log('이메일 가져오기 성공:', storedEmail);\r\n      fetchUserData(storedEmail);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserData = async (email) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/userdata?email=${email}`);\r\n      if (response.status === 200) {\r\n        console.log('유저 데이터 가져오기 성공:', response.data);\r\n        setUsername(response.data.username);\r\n      } else {\r\n        console.error('사용자 데이터 가져오기 실패');\r\n      }\r\n    } catch (error) {\r\n      console.error('사용자 데이터 가져오기 실패:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim() !== '' && chatroomNameInput.trim() !== '') {\r\n      navigate(`/chat/${chatroomNameInput}/${username}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatroom-container\">\r\n      <div className=\"form-container\">\r\n        <h1>Enter Chatroom</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" id=\"username\" value={username} readOnly />\r\n          <input type=\"text\" id=\"chatroom\" value={chatroomNameInput} onChange={(e) => setChatroomNameInput(e.target.value)} placeholder=\"채팅방 이름을 입력하세요\" />\r\n          <button type=\"submit\">Join</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );  \r\n}\r\n\r\nexport default Chatroom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}