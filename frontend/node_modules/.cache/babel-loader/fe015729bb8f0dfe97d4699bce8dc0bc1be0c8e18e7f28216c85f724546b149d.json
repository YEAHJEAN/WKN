{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import'./ForgotPassword.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ForgotPassword(){const navigate=useNavigate();const[email,setEmail]=useState('');const[code,setCode]=useState('');const[newPassword,setNewPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[errors,setErrors]=useState({});const[isCodeSent,setIsCodeSent]=useState(false);const[isVerified,setIsVerified]=useState(false);const[resetSuccess,setResetSuccess]=useState(false);const handleChangeEmail=e=>{const value=e.target.value;console.log('Email changed:',value);setEmail(value);};const handleChangeCode=e=>{const value=e.target.value;console.log('Code changed:',value);setCode(value);};const handleChangeNewPassword=e=>{const value=e.target.value;console.log('New password changed:',value);setNewPassword(value);};const handleChangeConfirmPassword=e=>{const value=e.target.value;console.log('Confirm password changed:',value);setConfirmPassword(value);};const handleSendCode=async e=>{e.preventDefault();const validationErrors=validateEmail(email);if(Object.keys(validationErrors).length===0){try{const response=await axios.post('https://kmk510.store/api/send-code',{email});console.log('Send code request sent successfully:',response);const alertMessage=\"6\\uC790\\uB9AC\\uC758 \\uC22B\\uC790\\uCF54\\uB4DC\\uAC00 \".concat(email,\" \\uC8FC\\uC18C\\uB85C \\uC218\\uC2E0\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\");setIsCodeSent(true);setErrors({});window.alert(alertMessage);// 메시지를 alert 창으로 표시\n}catch(error){var _error$response;console.error('Error sending code:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);window.alert('인증번호 발송에 실패했습니다. 다시 시도해주세요.');}}else{window.alert('이메일을 입력해주세요');setErrors(validationErrors);}};const handleVerifyCode=async e=>{e.preventDefault();try{const response=await axios.post('https://kmk510.store/api/verify-code',{email,code});console.log('Verify code request sent successfully:',response);setIsVerified(true);window.alert('인증이 완료되었습니다.');// 인증 완료 메시지 alert 창으로 표시\n}catch(error){var _error$response2;console.error('Error verifying code:',((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);window.alert('인증번호 확인에 실패했습니다. 다시 시도해주세요.');}};const handleResetPassword=async e=>{e.preventDefault();if(newPassword!==confirmPassword){window.alert('새 비밀번호와 확인 비밀번호가 일치하지 않습니다.');return;}try{const response=await axios.post('https://kmk510.store/api/reset-password',{email,newPassword});console.log('Password reset response:',response.data);setResetSuccess(true);window.alert('비밀번호가 성공적으로 재설정되었습니다.');navigate('/login');}catch(error){var _error$response3;console.error('Error resetting password:',((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||error.message);window.alert('비밀번호 재설정에 실패했습니다. 다시 시도해주세요.');}};useEffect(()=>{console.log('resetSuccess state changed:',resetSuccess);if(resetSuccess){navigate('/login');}},[resetSuccess,navigate]);const validateEmail=email=>{const errors={};if(!email.trim()){errors.email='이메일을 입력해주세요';}else if(!/\\S+@\\S+\\.\\S+/.test(email)){errors.email='유효한 이메일을 입력해주세요';}return errors;};return/*#__PURE__*/_jsx(\"div\",{className:\"forgot-password-box\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:isCodeSent?isVerified?handleResetPassword:handleVerifyCode:handleSendCode,children:[/*#__PURE__*/_jsx(\"h1\",{align:\"center\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"div\",{className:\"input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",placeholder:\"\\uC774\\uBA54\\uC77C\",value:email,onChange:handleChangeEmail,disabled:isCodeSent,className:\"fp-input\"})}),isCodeSent&&/*#__PURE__*/_jsx(\"div\",{className:\"input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"code\",placeholder:\"6\\uC790\\uB9AC \\uC22B\\uC790\\uCF54\\uB4DC \\uC785\\uB825\",value:code,onChange:handleChangeCode,className:\"fp-input\"})}),isVerified&&/*#__PURE__*/_jsx(\"div\",{className:\"fp-input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"newPassword\",placeholder:\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638\",value:newPassword,onChange:handleChangeNewPassword,className:\"fp-input\"})}),isVerified&&/*#__PURE__*/_jsx(\"div\",{className:\"fp-input-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"confirmPassword\",placeholder:\"\\uC0C8 \\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",value:confirmPassword,onChange:handleChangeConfirmPassword,className:\"fp-input\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"fp-button\",children:isCodeSent?isVerified?'비밀번호 재설정':'확인':'확인'})]})});}export default ForgotPassword;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","ForgotPassword","navigate","email","setEmail","code","setCode","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errors","setErrors","isCodeSent","setIsCodeSent","isVerified","setIsVerified","resetSuccess","setResetSuccess","handleChangeEmail","e","value","target","console","log","handleChangeCode","handleChangeNewPassword","handleChangeConfirmPassword","handleSendCode","preventDefault","validationErrors","validateEmail","Object","keys","length","response","post","alertMessage","concat","window","alert","error","_error$response","data","message","handleVerifyCode","_error$response2","handleResetPassword","_error$response3","trim","test","className","children","onSubmit","align","type","name","placeholder","onChange","disabled"],"sources":["C:/Users/user/mk/frontend/src/ForgotPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './ForgotPassword.css';\r\n\r\nfunction ForgotPassword() {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [errors, setErrors] = useState({});\r\n  const [isCodeSent, setIsCodeSent] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [resetSuccess, setResetSuccess] = useState(false);\r\n\r\n  const handleChangeEmail = (e) => {\r\n    const value = e.target.value;\r\n    console.log('Email changed:', value);\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangeCode = (e) => {\r\n    const value = e.target.value;\r\n    console.log('Code changed:', value);\r\n    setCode(value);\r\n  };\r\n\r\n  const handleChangeNewPassword = (e) => {\r\n    const value = e.target.value;\r\n    console.log('New password changed:', value);\r\n    setNewPassword(value);\r\n  };\r\n\r\n  const handleChangeConfirmPassword = (e) => {\r\n    const value = e.target.value;\r\n    console.log('Confirm password changed:', value);\r\n    setConfirmPassword(value);\r\n  };\r\n\r\n  const handleSendCode = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateEmail(email);\r\n\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      try {\r\n        const response = await axios.post('https://kmk510.store/api/send-code', { email });\r\n        console.log('Send code request sent successfully:', response);\r\n        const alertMessage = `6자리의 숫자코드가 ${email} 주소로 수신되었습니다.`;\r\n        setIsCodeSent(true);\r\n        setErrors({});\r\n        window.alert(alertMessage); // 메시지를 alert 창으로 표시\r\n      } catch (error) {\r\n        console.error('Error sending code:', error.response?.data || error.message);\r\n        window.alert('인증번호 발송에 실패했습니다. 다시 시도해주세요.');\r\n      }\r\n    } else {\r\n      window.alert('이메일을 입력해주세요');\r\n      setErrors(validationErrors);\r\n    }\r\n  };\r\n\r\n  const handleVerifyCode = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('https://kmk510.store/api/verify-code', { email, code });\r\n      console.log('Verify code request sent successfully:', response);\r\n      setIsVerified(true);\r\n      window.alert('인증이 완료되었습니다.'); // 인증 완료 메시지 alert 창으로 표시\r\n    } catch (error) {\r\n      console.error('Error verifying code:', error.response?.data || error.message);\r\n      window.alert('인증번호 확인에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    if (newPassword !== confirmPassword) {\r\n      window.alert('새 비밀번호와 확인 비밀번호가 일치하지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('https://kmk510.store/api/reset-password', { email, newPassword });\r\n      console.log('Password reset response:', response.data);\r\n      setResetSuccess(true);\r\n      window.alert('비밀번호가 성공적으로 재설정되었습니다.');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error.response?.data || error.message);\r\n      window.alert('비밀번호 재설정에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('resetSuccess state changed:', resetSuccess);\r\n    if (resetSuccess) {\r\n      navigate('/login');\r\n    }\r\n  }, [resetSuccess, navigate]);\r\n\r\n  const validateEmail = (email) => {\r\n    const errors = {};\r\n    if (!email.trim()) {\r\n      errors.email = '이메일을 입력해주세요';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      errors.email = '유효한 이메일을 입력해주세요';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgot-password-box\">\r\n      <form onSubmit={isCodeSent ? (isVerified ? handleResetPassword : handleVerifyCode) : handleSendCode}>\r\n        <h1 align=\"center\">비밀번호 찾기</h1>\r\n        <div className=\"input-group\">\r\n          <input type=\"text\" name=\"email\" placeholder=\"이메일\" value={email} onChange={handleChangeEmail} disabled={isCodeSent} className=\"fp-input\" />\r\n        </div>\r\n        {isCodeSent && (\r\n          <div className=\"input-group\">\r\n            <input type=\"text\" name=\"code\" placeholder=\"6자리 숫자코드 입력\" value={code} onChange={handleChangeCode} className=\"fp-input\" />\r\n          </div>\r\n        )}\r\n        {isVerified && (\r\n          <div className=\"fp-input-group\">\r\n            <input type=\"password\" name=\"newPassword\" placeholder=\"새 비밀번호\" value={newPassword} onChange={handleChangeNewPassword} className=\"fp-input\" />\r\n          </div>\r\n        )}\r\n        {isVerified && (\r\n          <div className=\"fp-input-group\">\r\n            <input type=\"password\" name=\"confirmPassword\" placeholder=\"새 비밀번호 확인\" value={confirmPassword} onChange={handleChangeConfirmPassword} className=\"fp-input\" />\r\n          </div>\r\n        )}\r\n        <button type=\"submit\" className=\"fp-button\">\r\n          {isCodeSent\r\n            ? isVerified\r\n              ? '비밀번호 재설정'\r\n              : '확인'\r\n            : '확인'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}